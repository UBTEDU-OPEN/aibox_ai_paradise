msgid ""
msgstr ""
"Project-Id-Version: onboard\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2021-05-24 14:13+0800\n"
"Last-Translator: Francesco Fumanti <Unknown>\n"
"Language-Team: Chinese (Simplified) <zh_CN@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2017-02-14 14:04+0000\n"
"X-Generator: Poedit 2.4.2\n"

msgid "ubt_confidence_title"
msgstr "置信度设置"

msgid "ubt_default"
msgstr "默认值"

msgid "ubt_confidence_tip"
msgstr "置信度表示机器判断物体为某结果的可能性，数值越大，可信度越高。\n置信度范围：1-100%，设置后可显示于识别框上方。"

msgid "ubt_cancel"
msgstr "取消"

msgid "ubt_reload"
msgstr "重新加载"

msgid "ubt_load_error"
msgstr "摄像头异常,请检查是否连接摄像头以及摄像头是否被其他应用占用"

msgid "ubt_quit_title"
msgstr "确定要退出吗？"

msgid "ubt_quit"
msgstr "退出"

msgid "ubt_loading"
msgstr "加载中，请耐心等待…"

msgid "ubt_sure"
msgstr "确定"

msgid "ubt_know"
msgstr "知道了"

msgid "ubt_unknown"
msgstr "未识别"

msgid "ubt_style_transfer_title"
msgstr "风格迁移"

msgid "ubt_style_transfer_subtitle"
msgstr "风格迁移基于生成对抗网络算法,根据涂鸦色块的颜色,形状以及目标风格生成\n不同类型的风景。"

msgid "ubt_style_transfer_dialog_tip"
msgstr "切换当前画面，则不保存记录。\n确定要切换吗？"

msgid "ubt_style_load_model"
msgstr "正在加载模型..."

msgid "ubt_style_generate"
msgstr "正在生成..."

msgid "ubt_style_preview"
msgstr "预览区"

msgid "ubt_style_export"
msgstr "导出"

msgid "ubt_style_file_save"
msgstr "文件保存"

msgid "ubt_style_copy"
msgstr "副本"

msgid "ubt_style_transfer"
msgstr "迁移风格"

msgid "ubt_style_produce"
msgstr "生成"

msgid "ubt_style_original_img"
msgstr "原图"

msgid "ubt_cartoon_title"
msgstr "人像卡通化"

msgid "ubt_yanshee_pose_imitate_title"
msgstr "Yanshee姿态模仿"

msgid "ubt_yanshee_pose_imitate_subtitle"
msgstr "基于AI box深度学习模型进行人体关键点检测和姿态估计，解析出人体动作的方向和角度，并通过局域网通讯\n将姿态关键点信息发送给Yanshee机器人进行姿态模仿。"

msgid "ubt_yanshee_pose_step_one"
msgstr "<div style='font-size:18px;padding:80px;'><span>第一步：将一个或多个Yanshee接入AI box的</span> <a style='color:#08f4f8' href=\"热点\">热点</a></div>"

msgid "ubt_yanshee_pose_step_two"
msgstr "第二步：Yanshee动作初始化"

msgid "ubt_yanshee_pose_motion_text"
msgstr "请连接机器人后初始化程序"

msgid "ubt_yanshee_pose_full_screen_demo"
msgstr "全屏演示"

msgid "ubt_yanshee_pose_motion_initial"
msgstr "初始化"

msgid "ubt_yanshee_pose_motion_loading"
msgstr "加载中…"

msgid "ubt_yanshee_pose_motion_initialing"
msgstr "请继续保持姿势"

msgid "ubt_yanshee_pose_motion_initial_finish"
msgstr "初始化完成"

msgid "ubt_yanshee_pose_motion_initial_tip"
msgstr "若动作模仿不准确请重置"

msgid "ubt_yanshee_pose_motion_reset"
msgstr "重置"

msgid "ubt_yanshee_pose_devices_loss_alert"
msgstr "Yanshee连接中断，请重试"

msgid "ubt_yanshee_pose_motion_title"
msgstr "请在摄像头前摆出姿势：\n保持手臂伸直、呈A字形站立"

msgid "ubt_yanshee_pose_guide_tip1"
msgstr "1.1 为AI box接好屏幕（HDMI）\n1.2 为AI box接好键盘、鼠标（USB）\n1.3 在界面中，按路径“开始-工具-热点设置”打开AI box热点，供Yanshee连接"

msgid "ubt_yanshee_pose_guide_tip2"
msgstr "2.1 为Yanshee连接屏幕（HDMI）\n2.2 为Yanshee连接键盘、鼠标（USB）以便在界面连接AI box热点"

msgid "ubt_yanshee_pose_guide_tip3"
msgstr "3.1 在Yanshee系统界面，点击网络入口\n3.2 找到AI box的热点名称、点击后输入密码进行连接"

msgid "ubt_yanshee_pose_guide_tip4"
msgstr "4.1 为AI box接好屏幕（HDMI）\n4.2 为AI box接好键盘、鼠标（USB）\n4.3 打开路径“桌面-AI乐园-Yanshee姿态模仿”以进行下一步操作"

msgid "ubt_yanshee_hotspot_set"
msgstr "热点设置"


msgid "ubt_loading_tip1"
msgstr "神经网络技术起源于上世纪五、六十年代，当时叫感知机（perceptron），拥有输入层、输出层和一个隐藏层。"

msgid "ubt_loading_tip2"
msgstr "人工智能诞生于 20 世纪 50 年代。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。"

msgid "ubt_loading_tip3"
msgstr "1983年，John Hopfield利用神经网络，在旅行社问题这个NP完全问题上获得了当时最好的结果，引起轰动。"

msgid "ubt_loading_tip4"
msgstr "2012 年在ImageNet图像分类挑战赛中，深度学习模型AlexNet一举夺冠，从此深度卷积神经网络（CNN）成为了所有计算机视觉任务的首选算法。"

msgid "ubt_loading_tip5"
msgstr "在神经网络中，我们通常需要随机初始化模型参数，然后通过反向传播（Back Propagation）算法来学习模型参数。"

msgid "ubt_loading_tip6"
msgstr "深度学习对比传统方法来说，最大的优势是特征的自动提取。因此，其对数据集的表达更高效和准确，所提取的抽象特征鲁棒性更强，泛化能力更好。"

msgid "ubt_loading_tip7"
msgstr "为了提高模型的泛化能力，通常会对训练数据做数据增强（data augmentation），如翻转、旋转等。"

msgid "ubt_loading_tip8"
msgstr "深度学习常用框架有Pytorch、Tensorflow、Keras和Caffe等等。对于新手来说，Keras可能是你的最好选择，因为它封装的API是更为抽象、高级的。"

msgid "ubt_loading_tip9"
msgstr "RNN(循环神经网络)是一类用于处理序列数据的神经网络模型，在自然语言处理领域有较多应用，也被用于各类时间序列预报。"

msgid "ubt_loading_tip10"
msgstr "LSTM（长短时记忆网络）可以控制何时让输入进入神经元，何时记住之前时序中学到的东西，以及何时让输出传递到下一个时间戳。"

msgid "ubt_loading_tip11"
msgstr "迁移学习是一种机器学习的方法，指的是一个预训练的模型被重新用在另一个任务中，可以让你对第二个任务建模的进展变快或提高它的性能。"

msgid "ubt_loading_tip12"
msgstr "Python 是一种解释型、面向对象、动态数据类型的高级程序设计语言，广泛用于当下火热的机器学习、大数据分析、网络爬虫中。"

msgid "ubt_loading_tip13"
msgstr "2020 年 1 月 1 日， Python 2 停止更新。因此，建议大家尽量都使用Python 3来编写程序。"

msgid "ubt_loading_tip14"
msgstr "在 Python 2.x 中 ，使用 / 除法，整数相除的结果是一个整数，把小数部分完全忽略掉。例如5/3的结果是1。"

msgid "ubt_loading_tip15"
msgstr "在 Python 3.x 中 ，使用/ 除法，不同于Python 2.x中，对于整数之间的相除，结果会是浮点数。例如5/3的结果是1.66666666667。"

msgid "ubt_loading_tip16"
msgstr "许多现代神经网络的实现基于GPU，GPU最初是为图形应用而开发的专用硬件组件。因此神经网络受益于游戏产业的发展。"

msgid "ubt_loading_tip17"
msgstr "CPU就像1位大学生，10分钟能做一道曲面积分，但是他10分钟内做不完1000道百位数加法。而GPU就像100个小学生，可以一起10分钟完成1000道百位数加法题。"

msgid "ubt_loading_tip18"
msgstr "常规的人脸识别流程是：人脸检测-人脸对齐-提取人脸特征-人脸特征比对。"

msgid "ubt_loading_tip19"
msgstr "图片分类任务就是判断图片中的对象是不是物体A。而目标检测任务则意味着，我们不仅要用算法判断图片中有没有物体A，还要在图片中找出它在哪，即它的包围框。"

msgid "ubt_loading_tip20"
msgstr "语义分割的任务是通过一定的方法将图像分割成具有一定语义含义的区域块，并识别出每个区域块的语义类别，实现从底层到高层的语义推理过程，最终得到一幅具有逐像素语义标注的分割图像。"

msgid "ubt_loading_tip21"
msgstr "目前语义分割的应用领域主要有：地理信息系统、无人车驾驶、医疗影像分析和机器人等领域。"

msgid "ubt_loading_tip22"
msgstr "过拟合与欠拟合的区别在于，欠拟合在训练集和测试集上的性能都较差，而过拟合往往能较好地学习训练集数据的性质，而在测试集上的性能较差。"

msgid "ubt_loading_tip23"
msgstr "图灵测试指的是电脑在5分钟内回答由人类测试者提出的一系列问题，如果其超过30%的回答让测试者误认为是人类所答，则电脑通过测试。"

msgid "ubt_loading_tip24"
msgstr "生成对抗网络（Generative Adversarial Network，简称GAN）是非监督式学习的一种方法，通过让两个神经网络相互博弈的方式进行学习。"

msgid "ubt_loading_tip25"
msgstr "2006年，被称为深度学习元年。在这一年，杰弗里 ·辛顿以及他的学生鲁斯兰·萨拉赫丁诺夫正式提出了深度学习的概念。杰弗里 ·辛顿也因此被称为深度学习之父。"

msgid "ubt_loading_tip26"
msgstr "2019年3月27日，ACM（美国计算机协会）宣布，有“深度学习三巨头”之称Yoshua Bengio、Yann LeCun、Geoffrey Hinton共同获得了2018年的图灵奖。"

msgid "ubt_loading_tip27"
msgstr "2018年由google推出的BERT的全称为Bidirectional Encoder Representation from Transformers，是一个预训练的语言表征模型。"

msgid "ubt_loading_tip28"
msgstr "1969年，单层神经网络被指出无法解决非线性问题，而当时多层网络的训练尚看不到希望。这个论断导致神经网络的研究进入冰河期。"

msgid "ubt_loading_tip29"
msgstr "深度学习能于2010再度崛起的原因主要有：1.硬件上的提升，特别是GPU的发展，使得矩阵运算速度大幅提升。2.大规模数据集的出现。3.训练算法的改进。"

msgid "ubt_loading_tip30"
msgstr "深度学习做识别，精度高，特征提取的过程是自学习的，泛化能力比较强，但是需要大量的标注数据去训练，对硬件要求高。"



msgid "ubt_style_loading_tip1"
msgstr "生成式对抗网络(Generative adversarial networks,GANs)的核心思想源自于零和博弈，包括生成器和判别器两个部分。"

msgid "ubt_style_loading_tip2"
msgstr "生成器接收随机变量并生成“假”样本，判别器则用于判断输入的样本是真实的还是合成的。两者通过相互对抗来获得彼此性能的提升。"

msgid "ubt_style_loading_tip3"
msgstr "GAN中同时训练两个模型：捕获数据分布的生成模型G，和估计样本来自训练数据的概率的判别模型D。"

msgid "ubt_style_loading_tip4"
msgstr "风格迁移是一个有趣的计算机视觉话题。它被用于我们的日常生活中，比如我们常用的美图工具中的各类滤镜背后就是风格迁移技术。"

msgid "ubt_style_loading_tip5"
msgstr "风格迁移（Style Transfer），指的是将图A的风格迁移到图B中去，即生成一张具有图A风格和图B内容的图C。"

msgid "ubt_style_loading_tip6"
msgstr "基于神经网络的图像风格迁移在2015年由Gatys et al. 在两篇论文中提出，是使用神经网络做风格迁移的开山鼻祖。"

msgid "ubt_style_loading_tip7"
msgstr "在2017年ICCV中，AdaIN（Adaptive Instance Normalization） 横空出世，完成了任意风格迁移。"

msgid "ubt_style_loading_tip8"
msgstr "2016年论文《Instance Normalization：The Missing Ingredient for Fast Stylization》提出了Instance Normalization，对结果有明显的提升。"

msgid "ubt_style_loading_tip9"
msgstr "SANet 旨在改进AdaIN在风格上的迁移充分性。其作者提出了style attention network来代替adaptive instance normalization完成风格迁移。"

msgid "ubt_style_loading_tip10"
msgstr "有人提出通过meta learning方法中的hyper network来代替Image Transformation Net的训练过程。"